set -g default-terminal "screen-256color"


# The first line configures tmux to use the wrapper program to start zsh 
# for each new tmux window that is opened. The next three lines are my 
# personal preferences for mouse handling inside tmux. You can keep or 
# discard these lines depending on your preferences. The real meat and 
# potatoes are the next ten lines that deal with copy mode.

# tmux has itâ€™s own copy/paste buffers in addition to the vim copy/paste 
# buffers, and OS X copy/paste. To work efficiently with tmux buffers, 
# enter copy mode with `. I've remapped the default copy bindings to use 
# the analgous vi bindings. To place text into a tmux copy/paste buffer, 
# enter copy mode and select the text to copy using v to make a selection 
# and then y to yank the selection. At this point, the text is in a tmux 
# copy/paste buffer. Running <prefix> p will paste the text. However, if 
# you want the text in the OS X copy/paste buffer, run <prefix> y.

set -g default-command "reattach-to-user-namespace -l zsh"

set -g mode-mouse on
setw -g mouse-select-window on
setw -g mouse-select-pane on

# Copy mode
setw -g mode-keys vi
bind ` copy-mode
unbind [
unbind p
bind p paste-buffer
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel
bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

